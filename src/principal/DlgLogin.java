/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import beans.EmpresaBean;
import beans.LocalBean;
import controls.LocalCtrl;
import controls.EmpresaCtrl;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.net.ServerSocket;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import utiles.Cifrador;
import utiles.DBManager;
import utiles.Focus;
import utiles.InfoAppGlobal;
import utiles.InfoErrores;
import utiles.LeerArchivoDeIp;
import utiles.MaxLength;
import utiles.StructuraLocales;

/**
 *
 * @author Andres
 */
public class DlgLogin extends javax.swing.JDialog {

    boolean expandido = true;
    public static String NomServidor;
    public static String IPServidor;
    public int baseDato;
    Locale defaultLocale;
    
    
    public DlgLogin(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        dimDialog();
        propiedadTextViews();
        jTFUsuario.grabFocus();
        fillComboConexion();
        cerrarVentana();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jCBConexion = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTFUsuario = new javax.swing.JTextField();
        jTFPassword = new javax.swing.JPasswordField();
        jBSalir = new javax.swing.JButton();
        jBEntrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ATOMSystems|Main - Entrada al Sistema ");

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/login128.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Conectarse a:");

        jCBConexion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jCBConexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBConexionActionPerformed(evt);
            }
        });
        jCBConexion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCBConexionKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 143, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBConexion, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCBConexion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Usuario:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Password:");

        jTFUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTFUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFUsuarioFocusGained(evt);
            }
        });
        jTFUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFUsuarioKeyPressed(evt);
            }
        });

        jTFPassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTFPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFPasswordFocusGained(evt);
            }
        });
        jTFPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFPasswordKeyPressed(evt);
            }
        });

        jBSalir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/salir24.png"))); // NOI18N
        jBSalir.setText("SALIR");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });
        jBSalir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBSalirKeyPressed(evt);
            }
        });

        jBEntrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jBEntrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/login24.png"))); // NOI18N
        jBEntrar.setText("ENTRAR");
        jBEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEntrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTFPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                            .addComponent(jTFUsuario)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBSalir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBEntrar)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBEntrar, jBSalir});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTFUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTFPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBSalir)
                    .addComponent(jBEntrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBEntrar, jBSalir});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jBSalirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBSalirKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jBSalir.doClick();
        }
    }//GEN-LAST:event_jBSalirKeyPressed

    private void jCBConexionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCBConexionKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jTFUsuario.grabFocus();
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
            salirDelSistema();
        }
    }//GEN-LAST:event_jCBConexionKeyPressed

    private void jTFUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFUsuarioKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jTFPassword.grabFocus();
        }
    }//GEN-LAST:event_jTFUsuarioKeyPressed

    private void jTFPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFPasswordKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jBEntrar.grabFocus();
        }
    }//GEN-LAST:event_jTFPasswordKeyPressed

    private void jBEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEntrarActionPerformed
        int codGrupoUsuario = 0;
        Locale.setDefault(Locale.US);
        FormMain.jLNombreUsuario.setText("");
        FormMain.codUsuario = 0;
        FormMain.nombreUsuario = "";
        if(jTFUsuario.getText().trim().equals("")){
            jTFUsuario.grabFocus();
            JOptionPane.showMessageDialog(this, "Debe llenar el campo de usuario!", "ATENCIÓN", JOptionPane.WARNING_MESSAGE);
        }else if(jTFPassword.getText().trim().equals("")){
            jTFPassword.grabFocus();
            JOptionPane.showMessageDialog(this, "Debe llenar el campo de password!", "ATENCIÓN", JOptionPane.WARNING_MESSAGE);
        }else{
            if(DBManager.conectar(jTFUsuario.getText().toLowerCase(), jTFPassword.getText().toUpperCase(), NomServidor, IPServidor, baseDato)){
                Locale.setDefault(new Locale("es_PY"));
                System.out.println("CONECTADO A LA BASE DE DATOS!");               
                getEmpresaDefault();
                getLocalDefault(1);
                try{
                    DBManager.setAutocommit(false);
                }catch(Exception ex){
                    ex.printStackTrace();
                    InfoErrores.errores(ex);
                    JOptionPane.showMessageDialog(this, "No se pudo cambiar la base de datos a AUTOCOMMIT FALSE!", "Atención...", JOptionPane.WARNING_MESSAGE);
                }
                DBManager.ejecutarDML("SET timezone = -3");
                SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss a");
                String data = sdf.format(new Date());
                String pass = null;
                try{
                    pass = Cifrador.encriptar("Oxab", jTFPassword.getText());
                }catch(Exception e){
                    e.printStackTrace();
                    InfoErrores.errores(e);
                }
                String fecha = sdf.format(new Date());
                FormMain.jLConectadoDesde.setText(fecha);
                System.out.println("Alias Usuario: " + jTFUsuario.getText() + "\nPassword: " + jTFPassword.getText() + "\nClave: " + pass);
                
                ResultSet resultUsuario = DBManager.ejecutarDSL("SELECT cod_usuario, nombre, alias, cod_grupo_usuario, activo FROM usuario WHERE alias = '" + jTFUsuario.getText().trim() + "'");
                try{
                    if(resultUsuario.next()){
                        if(resultUsuario.getString("activo").equals("S")){
                            FormMain.codUsuario = resultUsuario.getInt("cod_usuario");
                            FormMain.nombreUsuario = resultUsuario.getString("nombre");
                            FormMain.jLAlias.setText( resultUsuario.getString("alias") + " Conectado a " + DBManager.getNombreBD() + " ");
                            FormMain.jLNombreUsuario.setText(resultUsuario.getString("nombre").toUpperCase());
                            InfoAppGlobal.setUserReal(String.valueOf(resultUsuario.getInt("cod_usuario")));
                            InfoAppGlobal.setUserNameApp(resultUsuario.getString("nombre"));
                            InfoAppGlobal.setUserGroupApp(String.valueOf(resultUsuario.getInt("cod_grupo_usuario")));
                            
                            /*codGrupoUsuario = 0;
                            codGrupoUsuario = resultUsuario.getInt("cod_grupo_usuario");*/
                            
                            
                            FormMain.setEstadoMenus(true);
                            FormMain.setEstadoBotonesMenus(true);
                            FormMain.conectadoServer = true;
                            dispose();
                        }else{
                            FormMain.conectadoServer = false;
                            JOptionPane.showMessageDialog(this,"Usuario Inactivo!", "Atención...", JOptionPane.WARNING_MESSAGE);
                            jTFUsuario.grabFocus();
                        }
                    }else{
                        FormMain.codUsuario = 0;
                        FormMain.nombreUsuario = "";
                        FormMain.jLNombreUsuario.setText("***");
                        FormMain.conectadoServer = false;
                        JOptionPane.showMessageDialog(this,"Usuario Inexistente!", "ATENCIÓN", JOptionPane.WARNING_MESSAGE);
                    }
                }catch(Exception ex){
                    ex.printStackTrace();
                    FormMain.conectadoServer = false;
                    InfoErrores.errores(ex);
                    JOptionPane.showMessageDialog(this, "Usuario no habilitado en el sistema!", "ATENCIÓN", JOptionPane.WARNING_MESSAGE);
                }                                
                
                // Cierra el socket en el caso de nuevo login sin salir del sistema
                /*try{
                    FormMain.serverSocket.close();
                }catch(IOException ex){
                    //ex.printStackTrace();
                }*/
                
                
                if(FormMain.conectadoServer){
                    if(abreSocket(FormMain.idSocket)){
                        FormMain.permisosModulos(true, null);
                    }
                    else{
                        FormMain.setEstadoMenus(false);
                        FormMain.setEstadoBotonesMenus(false);
                        JOptionPane.showMessageDialog(this, "¡Ya existe una sesión abierta del sistema!", "ATENCIÓN", JOptionPane.WARNING_MESSAGE);                        
                        System.exit(0);
                    }
                }else{
                }                                
                                
            }else{
                jTFUsuario.requestFocus();
                DBManager.cerrarBD();
                FormMain.jLNombreUsuario.setText("USER");
                FormMain.nombreUsuario = "";
                jTFUsuario.requestFocus();
                jTFUsuario.selectAll();
                FormMain.conectadoServer = false;
                JOptionPane.showMessageDialog(this, "Login denegado! Verifique usuario y Contraseña!", "ATENCIÓN", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBEntrarActionPerformed

    private void jCBConexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBConexionActionPerformed
        JComboBox cbAux = (JComboBox)evt.getSource();
        StructuraLocales struSeleccionada = (StructuraLocales)cbAux.getSelectedItem();
        IPServidor = struSeleccionada.getIps();
        NomServidor = struSeleccionada.getServidor();
        FormMain.nombreServidor = NomServidor.toUpperCase();
        baseDato = struSeleccionada.getBaseDato();
        
        System.out.println("IPServidor: " + IPServidor + ", NomServidor: " + NomServidor + ", baseDato: " + baseDato);
    }//GEN-LAST:event_jCBConexionActionPerformed

    private void jTFUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFUsuarioFocusGained
        jTFUsuario.selectAll();
    }//GEN-LAST:event_jTFUsuarioFocusGained

    private void jTFPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPasswordFocusGained
        jTFPassword.selectAll();
    }//GEN-LAST:event_jTFPasswordFocusGained

    private void fillComboConexion() {
        try
        {
            LeerArchivoDeIp proveeDatos = new LeerArchivoDeIp();
            for(StructuraLocales stru : proveeDatos.getFuente())
            {
                jCBConexion.addItem(stru);
            }
        }catch(Exception e)
        {
            e.printStackTrace();
            InfoErrores.errores(e);
            JOptionPane.showMessageDialog(this, "Atención: Error leyendo archivo de conf de IP!", "Atención...", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void propiedadTextViews(){
        jTFUsuario.setDocument(new MaxLength(15, "UPPER", "ALFA"));
        jTFPassword.setDocument(new MaxLength(15, "UPPER", "ALFA"));
        
        jTFUsuario.addFocusListener(new Focus());
        jTFPassword.addFocusListener(new Focus());
    }
    
    private void dimDialog() {
        Dimension screenSize;
        screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dialogSize = getSize();
        if (dialogSize.height > screenSize.height) {
            dialogSize.height = screenSize.height;
        }
        if (dialogSize.width > screenSize.width) {
            dialogSize.width = screenSize.width;
        }
        setLocation((screenSize.width - dialogSize.width) / 2,
                (screenSize.height - dialogSize.height) / 2);
    }
    
    private void salirDelSistema()
    {
        int exit = JOptionPane.showConfirmDialog(this, "Desea salir del sistema?", "Salir del sistema", JOptionPane.YES_NO_OPTION);
        if(exit == 0)
        System.exit(0);
    }
    
    private void cerrarVentana()
    {
        this.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e)
            {
                System.exit(0);
            }
        });
    }
    
    private boolean getEmpresaDefault(){
        boolean result = true;
        try{
            FormMain.empresaBean = new EmpresaBean();
            EmpresaCtrl empresaCtrl = new EmpresaCtrl();
            FormMain.listBeanEmpresa = empresaCtrl.buscaEmpresaDefault("%");
            for(int i = 0; i < FormMain.listBeanEmpresa.size(); i++){
                if(FormMain.listBeanEmpresa.get(i).getEmpresaDefault().equals("S")){
                    FormMain.empresaBean = (EmpresaBean) FormMain.listBeanEmpresa.get(i);
                }
            }
            if(FormMain.empresaBean != null){
                FormMain.jTFCodEmpresa.setText(String.valueOf(FormMain.empresaBean.getCodEmpresa()));
                FormMain.jTFNombreEmpresa.setText(FormMain.empresaBean.getDescripcion());
                FormMain.jLNombreEmpresa.setText(FormMain.empresaBean.getDescripcion());
            }else{
                FormMain.jTFCodEmpresa.setText("0");
                FormMain.jTFNombreEmpresa.setText("*");
                FormMain.jLNombreEmpresa.setText("***");
                FormMain.empresaBean = null;
                FormMain.listBeanEmpresa = null;
                result = false;
            }
        }catch(Exception ex){
            result = false;
            ex.printStackTrace();
            InfoErrores.errores(ex);
        }
        return result;
    }
    
    private boolean getLocalDefault(int codEmpresa) {
        boolean result = true;
        try {
            FormMain.localBean = new LocalBean();
            LocalCtrl locCtrl = new LocalCtrl();
            FormMain.listBeanLocal = locCtrl.buscaLocalDefaultCodEmpresa(codEmpresa, "%");  // todos los locales de la empresa
            for (int i = 0; i < FormMain.listBeanLocal.size(); i++) {
                if (FormMain.listBeanLocal.get(i).getLocalDefault().equals("S")) {
                    FormMain.localBean = (LocalBean) FormMain.listBeanLocal.get(i); //Obtengo el elemento contenido  //pero visto como un bean
                }
            }

            if (FormMain.localBean != null) {
                FormMain.jTFCodLocal.setText(String.valueOf(FormMain.localBean.getCodLocal()));
                FormMain.jTFNombreLocal.setText(FormMain.localBean.getDescripcion());
                FormMain.jLDescLocal.setText(FormMain.localBean.getDescripcion());
                FormMain.idSocket = FormMain.localBean.getIdSocket();
            } else {
                FormMain.jTFCodLocal.setText("0");
                FormMain.jTFNombreLocal.setText("*");
                FormMain.jLDescLocal.setText("***");
                FormMain.localBean     = null;
                FormMain.listBeanLocal = null;
                result = false;
            }
        } catch (Exception ex) {
            result = false;
            ex.printStackTrace();
            InfoErrores.errores(ex);
        }
        return result;
    }
    
    // Rutina para Abrir una solo instancia del Sistema        
    private boolean abreSocket(int idSkt) {
        boolean result = true;
        try {
            FormMain.serverSocket = new ServerSocket(idSkt); //4440
            initComponents();

        } catch (IOException e) {
            e.printStackTrace();
            result = false;
            InfoErrores.errores(e);
        }
        return result;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgLogin dialog = new DlgLogin(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBEntrar;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox jCBConexion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jTFPassword;
    private javax.swing.JTextField jTFUsuario;
    // End of variables declaration//GEN-END:variables
}
